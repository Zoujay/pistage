// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: phistage.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetVariablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetVariablesRequest) Reset() {
	*x = SetVariablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariablesRequest) ProtoMessage() {}

func (x *SetVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariablesRequest.ProtoReflect.Descriptor instead.
func (*SetVariablesRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{0}
}

func (x *SetVariablesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetVariablesRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type SetVariablesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetVariablesReply) Reset() {
	*x = SetVariablesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariablesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariablesReply) ProtoMessage() {}

func (x *SetVariablesReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariablesReply.ProtoReflect.Descriptor instead.
func (*SetVariablesReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{1}
}

func (x *SetVariablesReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetVariablesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetVariablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVariablesRequest) Reset() {
	*x = GetVariablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariablesRequest) ProtoMessage() {}

func (x *GetVariablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariablesRequest.ProtoReflect.Descriptor instead.
func (*GetVariablesRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{2}
}

func (x *GetVariablesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetVariablesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables map[string]string `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetVariablesReply) Reset() {
	*x = GetVariablesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariablesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariablesReply) ProtoMessage() {}

func (x *GetVariablesReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariablesReply.ProtoReflect.Descriptor instead.
func (*GetVariablesReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{3}
}

func (x *GetVariablesReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVariablesReply) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type ApplyPhistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ApplyPhistageRequest) Reset() {
	*x = ApplyPhistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPhistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPhistageRequest) ProtoMessage() {}

func (x *ApplyPhistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPhistageRequest.ProtoReflect.Descriptor instead.
func (*ApplyPhistageRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{4}
}

func (x *ApplyPhistageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ApplyPhistageOnewayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ApplyPhistageOnewayReply) Reset() {
	*x = ApplyPhistageOnewayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPhistageOnewayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPhistageOnewayReply) ProtoMessage() {}

func (x *ApplyPhistageOnewayReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPhistageOnewayReply.ProtoReflect.Descriptor instead.
func (*ApplyPhistageOnewayReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyPhistageOnewayReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyPhistageOnewayReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ApplyPhistageStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Logtype int64  `protobuf:"varint,2,opt,name=logtype,proto3" json:"logtype,omitempty"`
	Log     string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *ApplyPhistageStreamReply) Reset() {
	*x = ApplyPhistageStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPhistageStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPhistageStreamReply) ProtoMessage() {}

func (x *ApplyPhistageStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPhistageStreamReply.ProtoReflect.Descriptor instead.
func (*ApplyPhistageStreamReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{6}
}

func (x *ApplyPhistageStreamReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyPhistageStreamReply) GetLogtype() int64 {
	if x != nil {
		return x.Logtype
	}
	return 0
}

func (x *ApplyPhistageStreamReply) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type GetPhistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPhistageRequest) Reset() {
	*x = GetPhistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhistageRequest) ProtoMessage() {}

func (x *GetPhistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhistageRequest.ProtoReflect.Descriptor instead.
func (*GetPhistageRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{7}
}

func (x *GetPhistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPhistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetPhistageReply) Reset() {
	*x = GetPhistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhistageReply) ProtoMessage() {}

func (x *GetPhistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhistageReply.ProtoReflect.Descriptor instead.
func (*GetPhistageReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{8}
}

func (x *GetPhistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPhistageReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeletePhistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeletePhistageRequest) Reset() {
	*x = DeletePhistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhistageRequest) ProtoMessage() {}

func (x *DeletePhistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhistageRequest.ProtoReflect.Descriptor instead.
func (*DeletePhistageRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePhistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeletePhistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeletePhistageReply) Reset() {
	*x = DeletePhistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhistageReply) ProtoMessage() {}

func (x *DeletePhistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhistageReply.ProtoReflect.Descriptor instead.
func (*DeletePhistageReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePhistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeletePhistageReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetRunsByPhistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetRunsByPhistageRequest) Reset() {
	*x = GetRunsByPhistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunsByPhistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunsByPhistageRequest) ProtoMessage() {}

func (x *GetRunsByPhistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunsByPhistageRequest.ProtoReflect.Descriptor instead.
func (*GetRunsByPhistageRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{11}
}

func (x *GetRunsByPhistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRunsByPhistageRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRunsByPhistageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetRunsByPhistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Runs []*Run `protobuf:"bytes,2,rep,name=runs,proto3" json:"runs,omitempty"`
}

func (x *GetRunsByPhistageReply) Reset() {
	*x = GetRunsByPhistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunsByPhistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunsByPhistageReply) ProtoMessage() {}

func (x *GetRunsByPhistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunsByPhistageReply.ProtoReflect.Descriptor instead.
func (*GetRunsByPhistageReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{12}
}

func (x *GetRunsByPhistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRunsByPhistageReply) GetRuns() []*Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

type GetJobRunsByPhistageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RunID  string `protobuf:"bytes,2,opt,name=runID,proto3" json:"runID,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetJobRunsByPhistageRequest) Reset() {
	*x = GetJobRunsByPhistageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRunsByPhistageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRunsByPhistageRequest) ProtoMessage() {}

func (x *GetJobRunsByPhistageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRunsByPhistageRequest.ProtoReflect.Descriptor instead.
func (*GetJobRunsByPhistageRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{13}
}

func (x *GetJobRunsByPhistageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobRunsByPhistageRequest) GetRunID() string {
	if x != nil {
		return x.RunID
	}
	return ""
}

func (x *GetJobRunsByPhistageRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetJobRunsByPhistageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetJobRunsByPhistageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RunID   string    `protobuf:"bytes,2,opt,name=runID,proto3" json:"runID,omitempty"`
	JobRuns []*JobRun `protobuf:"bytes,3,rep,name=jobRuns,proto3" json:"jobRuns,omitempty"`
}

func (x *GetJobRunsByPhistageReply) Reset() {
	*x = GetJobRunsByPhistageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRunsByPhistageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRunsByPhistageReply) ProtoMessage() {}

func (x *GetJobRunsByPhistageReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRunsByPhistageReply.ProtoReflect.Descriptor instead.
func (*GetJobRunsByPhistageReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{14}
}

func (x *GetJobRunsByPhistageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobRunsByPhistageReply) GetRunID() string {
	if x != nil {
		return x.RunID
	}
	return ""
}

func (x *GetJobRunsByPhistageReply) GetJobRuns() []*JobRun {
	if x != nil {
		return x.JobRuns
	}
	return nil
}

type RegisterJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RegisterJobRequest) Reset() {
	*x = RegisterJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterJobRequest) ProtoMessage() {}

func (x *RegisterJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterJobRequest.ProtoReflect.Descriptor instead.
func (*RegisterJobRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterJobRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RegisterJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegisterJobReply) Reset() {
	*x = RegisterJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterJobReply) ProtoMessage() {}

func (x *RegisterJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterJobReply.ProtoReflect.Descriptor instead.
func (*RegisterJobReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{16}
}

func (x *RegisterJobReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterJobReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RegisterStepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RegisterStepRequest) Reset() {
	*x = RegisterStepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStepRequest) ProtoMessage() {}

func (x *RegisterStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStepRequest.ProtoReflect.Descriptor instead.
func (*RegisterStepRequest) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{17}
}

func (x *RegisterStepRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RegisterStepReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegisterStepReply) Reset() {
	*x = RegisterStepReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStepReply) ProtoMessage() {}

func (x *RegisterStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStepReply.ProtoReflect.Descriptor instead.
func (*RegisterStepReply) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterStepReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterStepReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Phistage string                 `protobuf:"bytes,2,opt,name=phistage,proto3" json:"phistage,omitempty"`
	Start    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{19}
}

func (x *Run) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Run) GetPhistage() string {
	if x != nil {
		return x.Phistage
	}
	return ""
}

func (x *Run) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Run) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type JobRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Phistage string                 `protobuf:"bytes,2,opt,name=phistage,proto3" json:"phistage,omitempty"`
	Job      string                 `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Status   string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Start    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	Log      string                 `protobuf:"bytes,7,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *JobRun) Reset() {
	*x = JobRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_phistage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRun) ProtoMessage() {}

func (x *JobRun) ProtoReflect() protoreflect.Message {
	mi := &file_phistage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRun.ProtoReflect.Descriptor instead.
func (*JobRun) Descriptor() ([]byte, []int) {
	return file_phistage_proto_rawDescGZIP(), []int{20}
}

func (x *JobRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobRun) GetPhistage() string {
	if x != nil {
		return x.Phistage
	}
	return ""
}

func (x *JobRun) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *JobRun) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobRun) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *JobRun) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *JobRun) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

var File_phistage_proto protoreflect.FileDescriptor

var file_phistage_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3c, 0x0a,
	0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x29,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x18, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65, 0x77, 0x61,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x68, 0x69,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4c, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x75,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x22, 0x75, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x6e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73, 0x42,
	0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x52, 0x75, 0x6e,
	0x73, 0x22, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x40, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x06,
	0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x32, 0x91,
	0x06, 0x0a, 0x08, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4f, 0x6e, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x65,
	0x77, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52,
	0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x73,
	0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x68, 0x69, 0x73, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x72, 0x75, 0x32, 0x2f, 0x70, 0x68, 0x69,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_phistage_proto_rawDescOnce sync.Once
	file_phistage_proto_rawDescData = file_phistage_proto_rawDesc
)

func file_phistage_proto_rawDescGZIP() []byte {
	file_phistage_proto_rawDescOnce.Do(func() {
		file_phistage_proto_rawDescData = protoimpl.X.CompressGZIP(file_phistage_proto_rawDescData)
	})
	return file_phistage_proto_rawDescData
}

var file_phistage_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_phistage_proto_goTypes = []interface{}{
	(*SetVariablesRequest)(nil),         // 0: proto.SetVariablesRequest
	(*SetVariablesReply)(nil),           // 1: proto.SetVariablesReply
	(*GetVariablesRequest)(nil),         // 2: proto.GetVariablesRequest
	(*GetVariablesReply)(nil),           // 3: proto.GetVariablesReply
	(*ApplyPhistageRequest)(nil),        // 4: proto.ApplyPhistageRequest
	(*ApplyPhistageOnewayReply)(nil),    // 5: proto.ApplyPhistageOnewayReply
	(*ApplyPhistageStreamReply)(nil),    // 6: proto.ApplyPhistageStreamReply
	(*GetPhistageRequest)(nil),          // 7: proto.GetPhistageRequest
	(*GetPhistageReply)(nil),            // 8: proto.GetPhistageReply
	(*DeletePhistageRequest)(nil),       // 9: proto.DeletePhistageRequest
	(*DeletePhistageReply)(nil),         // 10: proto.DeletePhistageReply
	(*GetRunsByPhistageRequest)(nil),    // 11: proto.GetRunsByPhistageRequest
	(*GetRunsByPhistageReply)(nil),      // 12: proto.GetRunsByPhistageReply
	(*GetJobRunsByPhistageRequest)(nil), // 13: proto.GetJobRunsByPhistageRequest
	(*GetJobRunsByPhistageReply)(nil),   // 14: proto.GetJobRunsByPhistageReply
	(*RegisterJobRequest)(nil),          // 15: proto.RegisterJobRequest
	(*RegisterJobReply)(nil),            // 16: proto.RegisterJobReply
	(*RegisterStepRequest)(nil),         // 17: proto.RegisterStepRequest
	(*RegisterStepReply)(nil),           // 18: proto.RegisterStepReply
	(*Run)(nil),                         // 19: proto.Run
	(*JobRun)(nil),                      // 20: proto.JobRun
	nil,                                 // 21: proto.SetVariablesRequest.VariablesEntry
	nil,                                 // 22: proto.GetVariablesReply.VariablesEntry
	(*timestamppb.Timestamp)(nil),       // 23: google.protobuf.Timestamp
}
var file_phistage_proto_depIdxs = []int32{
	21, // 0: proto.SetVariablesRequest.variables:type_name -> proto.SetVariablesRequest.VariablesEntry
	22, // 1: proto.GetVariablesReply.variables:type_name -> proto.GetVariablesReply.VariablesEntry
	19, // 2: proto.GetRunsByPhistageReply.runs:type_name -> proto.Run
	20, // 3: proto.GetJobRunsByPhistageReply.jobRuns:type_name -> proto.JobRun
	23, // 4: proto.Run.start:type_name -> google.protobuf.Timestamp
	23, // 5: proto.Run.end:type_name -> google.protobuf.Timestamp
	23, // 6: proto.JobRun.start:type_name -> google.protobuf.Timestamp
	23, // 7: proto.JobRun.end:type_name -> google.protobuf.Timestamp
	0,  // 8: proto.Phistage.SetVariables:input_type -> proto.SetVariablesRequest
	2,  // 9: proto.Phistage.GetVariables:input_type -> proto.GetVariablesRequest
	4,  // 10: proto.Phistage.ApplyOneway:input_type -> proto.ApplyPhistageRequest
	4,  // 11: proto.Phistage.ApplyStream:input_type -> proto.ApplyPhistageRequest
	7,  // 12: proto.Phistage.GetPhistage:input_type -> proto.GetPhistageRequest
	9,  // 13: proto.Phistage.DeletePhistage:input_type -> proto.DeletePhistageRequest
	11, // 14: proto.Phistage.GetRunsByPhistage:input_type -> proto.GetRunsByPhistageRequest
	13, // 15: proto.Phistage.GetJobRunsByPhistage:input_type -> proto.GetJobRunsByPhistageRequest
	15, // 16: proto.Phistage.RegisterJob:input_type -> proto.RegisterJobRequest
	17, // 17: proto.Phistage.RegisterStep:input_type -> proto.RegisterStepRequest
	1,  // 18: proto.Phistage.SetVariables:output_type -> proto.SetVariablesReply
	3,  // 19: proto.Phistage.GetVariables:output_type -> proto.GetVariablesReply
	5,  // 20: proto.Phistage.ApplyOneway:output_type -> proto.ApplyPhistageOnewayReply
	6,  // 21: proto.Phistage.ApplyStream:output_type -> proto.ApplyPhistageStreamReply
	8,  // 22: proto.Phistage.GetPhistage:output_type -> proto.GetPhistageReply
	10, // 23: proto.Phistage.DeletePhistage:output_type -> proto.DeletePhistageReply
	12, // 24: proto.Phistage.GetRunsByPhistage:output_type -> proto.GetRunsByPhistageReply
	14, // 25: proto.Phistage.GetJobRunsByPhistage:output_type -> proto.GetJobRunsByPhistageReply
	16, // 26: proto.Phistage.RegisterJob:output_type -> proto.RegisterJobReply
	18, // 27: proto.Phistage.RegisterStep:output_type -> proto.RegisterStepReply
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_phistage_proto_init() }
func file_phistage_proto_init() {
	if File_phistage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_phistage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariablesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariablesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPhistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPhistageOnewayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPhistageStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunsByPhistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunsByPhistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRunsByPhistageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRunsByPhistageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStepReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_phistage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_phistage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_phistage_proto_goTypes,
		DependencyIndexes: file_phistage_proto_depIdxs,
		MessageInfos:      file_phistage_proto_msgTypes,
	}.Build()
	File_phistage_proto = out.File
	file_phistage_proto_rawDesc = nil
	file_phistage_proto_goTypes = nil
	file_phistage_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PhistageClient is the client API for Phistage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PhistageClient interface {
	SetVariables(ctx context.Context, in *SetVariablesRequest, opts ...grpc.CallOption) (*SetVariablesReply, error)
	GetVariables(ctx context.Context, in *GetVariablesRequest, opts ...grpc.CallOption) (*GetVariablesReply, error)
	ApplyOneway(ctx context.Context, in *ApplyPhistageRequest, opts ...grpc.CallOption) (*ApplyPhistageOnewayReply, error)
	ApplyStream(ctx context.Context, in *ApplyPhistageRequest, opts ...grpc.CallOption) (Phistage_ApplyStreamClient, error)
	GetPhistage(ctx context.Context, in *GetPhistageRequest, opts ...grpc.CallOption) (*GetPhistageReply, error)
	DeletePhistage(ctx context.Context, in *DeletePhistageRequest, opts ...grpc.CallOption) (*DeletePhistageReply, error)
	GetRunsByPhistage(ctx context.Context, in *GetRunsByPhistageRequest, opts ...grpc.CallOption) (*GetRunsByPhistageReply, error)
	GetJobRunsByPhistage(ctx context.Context, in *GetJobRunsByPhistageRequest, opts ...grpc.CallOption) (*GetJobRunsByPhistageReply, error)
	RegisterJob(ctx context.Context, in *RegisterJobRequest, opts ...grpc.CallOption) (*RegisterJobReply, error)
	RegisterStep(ctx context.Context, in *RegisterStepRequest, opts ...grpc.CallOption) (*RegisterStepReply, error)
}

type phistageClient struct {
	cc grpc.ClientConnInterface
}

func NewPhistageClient(cc grpc.ClientConnInterface) PhistageClient {
	return &phistageClient{cc}
}

func (c *phistageClient) SetVariables(ctx context.Context, in *SetVariablesRequest, opts ...grpc.CallOption) (*SetVariablesReply, error) {
	out := new(SetVariablesReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/SetVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) GetVariables(ctx context.Context, in *GetVariablesRequest, opts ...grpc.CallOption) (*GetVariablesReply, error) {
	out := new(GetVariablesReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/GetVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) ApplyOneway(ctx context.Context, in *ApplyPhistageRequest, opts ...grpc.CallOption) (*ApplyPhistageOnewayReply, error) {
	out := new(ApplyPhistageOnewayReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/ApplyOneway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) ApplyStream(ctx context.Context, in *ApplyPhistageRequest, opts ...grpc.CallOption) (Phistage_ApplyStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Phistage_serviceDesc.Streams[0], "/proto.Phistage/ApplyStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &phistageApplyStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Phistage_ApplyStreamClient interface {
	Recv() (*ApplyPhistageStreamReply, error)
	grpc.ClientStream
}

type phistageApplyStreamClient struct {
	grpc.ClientStream
}

func (x *phistageApplyStreamClient) Recv() (*ApplyPhistageStreamReply, error) {
	m := new(ApplyPhistageStreamReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *phistageClient) GetPhistage(ctx context.Context, in *GetPhistageRequest, opts ...grpc.CallOption) (*GetPhistageReply, error) {
	out := new(GetPhistageReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/GetPhistage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) DeletePhistage(ctx context.Context, in *DeletePhistageRequest, opts ...grpc.CallOption) (*DeletePhistageReply, error) {
	out := new(DeletePhistageReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/DeletePhistage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) GetRunsByPhistage(ctx context.Context, in *GetRunsByPhistageRequest, opts ...grpc.CallOption) (*GetRunsByPhistageReply, error) {
	out := new(GetRunsByPhistageReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/GetRunsByPhistage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) GetJobRunsByPhistage(ctx context.Context, in *GetJobRunsByPhistageRequest, opts ...grpc.CallOption) (*GetJobRunsByPhistageReply, error) {
	out := new(GetJobRunsByPhistageReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/GetJobRunsByPhistage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) RegisterJob(ctx context.Context, in *RegisterJobRequest, opts ...grpc.CallOption) (*RegisterJobReply, error) {
	out := new(RegisterJobReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/RegisterJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phistageClient) RegisterStep(ctx context.Context, in *RegisterStepRequest, opts ...grpc.CallOption) (*RegisterStepReply, error) {
	out := new(RegisterStepReply)
	err := c.cc.Invoke(ctx, "/proto.Phistage/RegisterStep", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhistageServer is the server API for Phistage service.
type PhistageServer interface {
	SetVariables(context.Context, *SetVariablesRequest) (*SetVariablesReply, error)
	GetVariables(context.Context, *GetVariablesRequest) (*GetVariablesReply, error)
	ApplyOneway(context.Context, *ApplyPhistageRequest) (*ApplyPhistageOnewayReply, error)
	ApplyStream(*ApplyPhistageRequest, Phistage_ApplyStreamServer) error
	GetPhistage(context.Context, *GetPhistageRequest) (*GetPhistageReply, error)
	DeletePhistage(context.Context, *DeletePhistageRequest) (*DeletePhistageReply, error)
	GetRunsByPhistage(context.Context, *GetRunsByPhistageRequest) (*GetRunsByPhistageReply, error)
	GetJobRunsByPhistage(context.Context, *GetJobRunsByPhistageRequest) (*GetJobRunsByPhistageReply, error)
	RegisterJob(context.Context, *RegisterJobRequest) (*RegisterJobReply, error)
	RegisterStep(context.Context, *RegisterStepRequest) (*RegisterStepReply, error)
}

// UnimplementedPhistageServer can be embedded to have forward compatible implementations.
type UnimplementedPhistageServer struct {
}

func (*UnimplementedPhistageServer) SetVariables(context.Context, *SetVariablesRequest) (*SetVariablesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVariables not implemented")
}
func (*UnimplementedPhistageServer) GetVariables(context.Context, *GetVariablesRequest) (*GetVariablesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVariables not implemented")
}
func (*UnimplementedPhistageServer) ApplyOneway(context.Context, *ApplyPhistageRequest) (*ApplyPhistageOnewayReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyOneway not implemented")
}
func (*UnimplementedPhistageServer) ApplyStream(*ApplyPhistageRequest, Phistage_ApplyStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ApplyStream not implemented")
}
func (*UnimplementedPhistageServer) GetPhistage(context.Context, *GetPhistageRequest) (*GetPhistageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhistage not implemented")
}
func (*UnimplementedPhistageServer) DeletePhistage(context.Context, *DeletePhistageRequest) (*DeletePhistageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePhistage not implemented")
}
func (*UnimplementedPhistageServer) GetRunsByPhistage(context.Context, *GetRunsByPhistageRequest) (*GetRunsByPhistageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunsByPhistage not implemented")
}
func (*UnimplementedPhistageServer) GetJobRunsByPhistage(context.Context, *GetJobRunsByPhistageRequest) (*GetJobRunsByPhistageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobRunsByPhistage not implemented")
}
func (*UnimplementedPhistageServer) RegisterJob(context.Context, *RegisterJobRequest) (*RegisterJobReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterJob not implemented")
}
func (*UnimplementedPhistageServer) RegisterStep(context.Context, *RegisterStepRequest) (*RegisterStepReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterStep not implemented")
}

func RegisterPhistageServer(s *grpc.Server, srv PhistageServer) {
	s.RegisterService(&_Phistage_serviceDesc, srv)
}

func _Phistage_SetVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).SetVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/SetVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).SetVariables(ctx, req.(*SetVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_GetVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).GetVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/GetVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).GetVariables(ctx, req.(*GetVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_ApplyOneway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyPhistageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).ApplyOneway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/ApplyOneway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).ApplyOneway(ctx, req.(*ApplyPhistageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_ApplyStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ApplyPhistageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PhistageServer).ApplyStream(m, &phistageApplyStreamServer{stream})
}

type Phistage_ApplyStreamServer interface {
	Send(*ApplyPhistageStreamReply) error
	grpc.ServerStream
}

type phistageApplyStreamServer struct {
	grpc.ServerStream
}

func (x *phistageApplyStreamServer) Send(m *ApplyPhistageStreamReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Phistage_GetPhistage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhistageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).GetPhistage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/GetPhistage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).GetPhistage(ctx, req.(*GetPhistageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_DeletePhistage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePhistageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).DeletePhistage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/DeletePhistage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).DeletePhistage(ctx, req.(*DeletePhistageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_GetRunsByPhistage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunsByPhistageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).GetRunsByPhistage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/GetRunsByPhistage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).GetRunsByPhistage(ctx, req.(*GetRunsByPhistageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_GetJobRunsByPhistage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRunsByPhistageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).GetJobRunsByPhistage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/GetJobRunsByPhistage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).GetJobRunsByPhistage(ctx, req.(*GetJobRunsByPhistageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_RegisterJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).RegisterJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/RegisterJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).RegisterJob(ctx, req.(*RegisterJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Phistage_RegisterStep_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterStepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhistageServer).RegisterStep(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Phistage/RegisterStep",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhistageServer).RegisterStep(ctx, req.(*RegisterStepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Phistage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Phistage",
	HandlerType: (*PhistageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetVariables",
			Handler:    _Phistage_SetVariables_Handler,
		},
		{
			MethodName: "GetVariables",
			Handler:    _Phistage_GetVariables_Handler,
		},
		{
			MethodName: "ApplyOneway",
			Handler:    _Phistage_ApplyOneway_Handler,
		},
		{
			MethodName: "GetPhistage",
			Handler:    _Phistage_GetPhistage_Handler,
		},
		{
			MethodName: "DeletePhistage",
			Handler:    _Phistage_DeletePhistage_Handler,
		},
		{
			MethodName: "GetRunsByPhistage",
			Handler:    _Phistage_GetRunsByPhistage_Handler,
		},
		{
			MethodName: "GetJobRunsByPhistage",
			Handler:    _Phistage_GetJobRunsByPhistage_Handler,
		},
		{
			MethodName: "RegisterJob",
			Handler:    _Phistage_RegisterJob_Handler,
		},
		{
			MethodName: "RegisterStep",
			Handler:    _Phistage_RegisterStep_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ApplyStream",
			Handler:       _Phistage_ApplyStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "phistage.proto",
}
